// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home test render Home screen correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "#E5E5E5",
        "flex": 1,
        "paddingHorizontal": 30,
        "paddingVertical": 10,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "marginBottom": 5,
        "marginTop": 30,
      }
    }
  >
    <Text
      numberOfLiner={2}
      style={
        Object {
          "color": "#FCA311",
          "fontSize": 26,
          "fontWeight": "600",
          "textAlign": "left",
          "width": 220,
        }
      }
    >
      Encontre o imóvel ideal para você!
    </Text>
    <Image
      resizeMode="cover"
      source={1}
      style={
        Object {
          "height": 60,
          "width": 60,
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "alignSelf": "stretch",
        "backgroundColor": "#FFF",
        "borderColor": "#14213D",
        "borderRadius": 4,
        "borderWidth": 1,
        "elevation": 2,
        "flexDirection": "row",
        "height": 46,
        "justifyContent": "space-between",
        "marginTop": 10,
        "paddingHorizontal": 12,
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 2,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      placeholder="Pesquise por localidade..."
      placeholderTextColor="#999"
      rejectResponderTermination={true}
      style={
        Object {
          "paddingHorizontal": 10,
          "paddingVertical": 10,
        }
      }
      underlineColorAndroid="transparent"
    />
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "opacity": 1,
        }
      }
    >
      <Icon
        color="#14213D"
        name="search"
        size={16}
      />
    </View>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onRefresh={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshControl={
        <RefreshControlMock
          onRefresh={[Function]}
          refreshing={false}
        />
      }
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      showsVerticalScrollIndicator={false}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <RCTRefreshControl />
      <View />
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
